// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shared.proto

#include "shared.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace tibia {
namespace protobuf {
namespace shared {
}  // namespace shared
}  // namespace protobuf
}  // namespace tibia
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_shared_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_shared_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_shared_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_shared_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_shared_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014shared.proto\022\025tibia.protobuf.shared*\224\001"
  "\n\rPLAYER_ACTION\022\026\n\022PLAYER_ACTION_NONE\020\000\022"
  "\026\n\022PLAYER_ACTION_LOOK\020\001\022\025\n\021PLAYER_ACTION"
  "_USE\020\002\022\026\n\022PLAYER_ACTION_OPEN\020\003\022$\n PLAYER"
  "_ACTION_AUTOWALK_HIGHLIGHT\020\004*\263\005\n\rITEM_CA"
  "TEGORY\022\030\n\024ITEM_CATEGORY_ARMORS\020\001\022\031\n\025ITEM"
  "_CATEGORY_AMULETS\020\002\022\027\n\023ITEM_CATEGORY_BOO"
  "TS\020\003\022\034\n\030ITEM_CATEGORY_CONTAINERS\020\004\022\034\n\030IT"
  "EM_CATEGORY_DECORATION\020\005\022\026\n\022ITEM_CATEGOR"
  "Y_FOOD\020\006\022\036\n\032ITEM_CATEGORY_HELMETS_HATS\020\007"
  "\022\026\n\022ITEM_CATEGORY_LEGS\020\010\022\030\n\024ITEM_CATEGOR"
  "Y_OTHERS\020\t\022\031\n\025ITEM_CATEGORY_POTIONS\020\n\022\027\n"
  "\023ITEM_CATEGORY_RINGS\020\013\022\027\n\023ITEM_CATEGORY_"
  "RUNES\020\014\022\031\n\025ITEM_CATEGORY_SHIELDS\020\r\022\027\n\023IT"
  "EM_CATEGORY_TOOLS\020\016\022\033\n\027ITEM_CATEGORY_VAL"
  "UABLES\020\017\022\034\n\030ITEM_CATEGORY_AMMUNITION\020\020\022\026"
  "\n\022ITEM_CATEGORY_AXES\020\021\022\027\n\023ITEM_CATEGORY_"
  "CLUBS\020\022\022\"\n\036ITEM_CATEGORY_DISTANCE_WEAPON"
  "S\020\023\022\030\n\024ITEM_CATEGORY_SWORDS\020\024\022\034\n\030ITEM_CA"
  "TEGORY_WANDS_RODS\020\025\022!\n\035ITEM_CATEGORY_PRE"
  "MIUM_SCROLLS\020\026\022\035\n\031ITEM_CATEGORY_TIBIA_CO"
  "INS\020\027\022#\n\037ITEM_CATEGORY_CREATURE_PRODUCTS"
  "\020\030*\355\001\n\021PLAYER_PROFESSION\022\"\n\025PLAYER_PROFE"
  "SSION_ANY\020\377\377\377\377\377\377\377\377\377\001\022\032\n\026PLAYER_PROFESSIO"
  "N_NONE\020\000\022\034\n\030PLAYER_PROFESSION_KNIGHT\020\001\022\035"
  "\n\031PLAYER_PROFESSION_PALADIN\020\002\022\036\n\032PLAYER_"
  "PROFESSION_SORCERER\020\003\022\033\n\027PLAYER_PROFESSI"
  "ON_DRUID\020\004\022\036\n\032PLAYER_PROFESSION_PROMOTED"
  "\020\n*\203\001\n\023ANIMATION_LOOP_TYPE\022)\n\034ANIMATION_"
  "LOOP_TYPE_PINGPONG\020\377\377\377\377\377\377\377\377\377\001\022 \n\034ANIMATI"
  "ON_LOOP_TYPE_INFINITE\020\000\022\037\n\033ANIMATION_LOO"
  "P_TYPE_COUNTED\020\001*4\n\tHOOK_TYPE\022\023\n\017HOOK_TY"
  "PE_SOUTH\020\001\022\022\n\016HOOK_TYPE_EAST\020\002"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_shared_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_shared_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_shared_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_shared_2eproto = {
  false, false, descriptor_table_protodef_shared_2eproto, "shared.proto", 1310,
  &descriptor_table_shared_2eproto_once, descriptor_table_shared_2eproto_sccs, descriptor_table_shared_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_shared_2eproto::offsets,
  file_level_metadata_shared_2eproto, 0, file_level_enum_descriptors_shared_2eproto, file_level_service_descriptors_shared_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_shared_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_shared_2eproto)), true);
namespace tibia {
namespace protobuf {
namespace shared {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PLAYER_ACTION_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_shared_2eproto);
  return file_level_enum_descriptors_shared_2eproto[0];
}
bool PLAYER_ACTION_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ITEM_CATEGORY_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_shared_2eproto);
  return file_level_enum_descriptors_shared_2eproto[1];
}
bool ITEM_CATEGORY_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PLAYER_PROFESSION_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_shared_2eproto);
  return file_level_enum_descriptors_shared_2eproto[2];
}
bool PLAYER_PROFESSION_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ANIMATION_LOOP_TYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_shared_2eproto);
  return file_level_enum_descriptors_shared_2eproto[3];
}
bool ANIMATION_LOOP_TYPE_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* HOOK_TYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_shared_2eproto);
  return file_level_enum_descriptors_shared_2eproto[4];
}
bool HOOK_TYPE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace shared
}  // namespace protobuf
}  // namespace tibia
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
